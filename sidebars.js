// @ts-check

const chains = [
  {
    id: "arbitrumOneApi",
    type: "autogenerated",
    dirName: "arbitrum-one-api",
    label: "Arbitrum One",
    link: "/arbitrum-one-api/intro",
  },
  {
    id: "avalancheApi",
    type: "autogenerated",
    dirName: "avalanche-api",
    label: "Avalanche",
    link: "/avalanche-api/intro",
  },
  {
    id: "baseApi",
    type: "autogenerated",
    dirName: "base-api",
    label: "Base",
    link: "/base-api/intro",
  },
  {
    id: "berachainApi",
    type: "autogenerated",
    dirName: "berachain-api",
    label: "Berachain",
    link: "/berachain-api/intro",
  },
  {
    id: "binanceSmartChainApi",
    type: "autogenerated",
    dirName: "binance-smart-chain-api",
    label: "BNB Smart Chain",
    link: "/binance-smart-chain-api/intro",
  },
  {
    id: "blastchainApi",
    type: "autogenerated",
    dirName: "blastchain-api",
    label: "Blast",
    link: "/blastchain-api/intro",
  },
  {
    id: "bobaApi",
    type: "autogenerated",
    dirName: "boba-api",
    label: "Boba",
    link: "/boba-api/intro",
  },
  {
    id: "celoApi",
    type: "autogenerated",
    dirName: "celo-api",
    label: "Celo",
    link: "/celo-api/intro",
  },
  {
    id: "ethereumApi",
    type: "autogenerated",
    dirName: "ethereum-api",
    label: "Ethereum",
    link: "/ethereum-api/intro",
  },
  {
    id: "fantomApi",
    type: "autogenerated",
    dirName: "fantom-api",
    label: "Fantom",
    link: "/fantom-api/intro",
  },
  {
    id: "fraxtalApi",
    type: "autogenerated",
    dirName: "fraxtal-api",
    label: "Fraxtal",
    link: "/fraxtal-api/intro",
  },
  {
    id: "fuseApi",
    type: "autogenerated",
    dirName: "fuse-api",
    label: "Fuse",
    link: "/fuse-api/intro",
  },
  {
    id: "gnosisApi",
    type: "autogenerated",
    dirName: "gnosis-api",
    label: "Gnosis",
    link: "/gnosis-api/intro",
  },
  {
    id: "harmonyShard0Api",
    type: "autogenerated",
    dirName: "harmony-shard-0-api",
    label: "Harmony Shard 0",
    link: "/harmony-shard-0-api/intro",
  },
  {
    id: "inkApi",
    type: "autogenerated",
    dirName: "ink-api",
    label: "Ink",
    link: "/ink-api/intro",
  },
  {
    id: "iotexApi",
    type: "autogenerated",
    dirName: "iotex-api",
    label: "IoTeX",
    link: "/iotex-api/intro",
  },
  {
    id: "kaiaApi",
    type: "autogenerated",
    dirName: "kaia-api",
    label: "Kaia",
    link: "/kaia-api/intro",
  },
  {
    id: "kavaApi",
    type: "autogenerated",
    dirName: "kava-api",
    label: "Kava",
    link: "/kava-api/intro",
  },
  {
    id: "lineaApi",
    type: "autogenerated",
    dirName: "linea-api",
    label: "Linea",
    link: "/linea-api/intro",
  },
  {
    id: "mantleApi",
    type: "autogenerated",
    dirName: "mantle-api",
    label: "Mantle",
    link: "/mantle-api/intro",
  },
  {
    id: "metisApi",
    type: "autogenerated",
    dirName: "metis-api",
    label: "Metis",
    link: "/metis-api/intro",
  },
  {
    id: "moonbeamApi",
    type: "autogenerated",
    dirName: "moonbeam-api",
    label: "Moonbeam",
    link: "/moonbeam-api/intro",
  },
  {
    id: "moonriverApi",
    type: "autogenerated",
    dirName: "moonriver-api",
    label: "Moonriver",
    link: "/moonriver-api/intro",
  },
  {
    id: "nearApi",
    type: "autogenerated",
    dirName: "near-api",
    label: "NEAR",
    link: "/near-api/intro",
  },
  {
    id: "oasysApi",
    type: "autogenerated",
    dirName: "oasys-api",
    label: "Oasys",
    link: "/oasys-api/intro",
  },
  {
    id: "opbnbApi",
    type: "autogenerated",
    dirName: "opbnb-api",
    label: "opBNB",
    link: "/opbnb-api/intro",
  },
  {
    id: "optimismApi",
    type: "autogenerated",
    dirName: "optimism-api",
    label: "Optimism",
    link: "/optimism-api/intro",
  },
  {
    id: "osmosisApi",
    type: "autogenerated",
    dirName: "osmosis-api",
    label: "Osmosis",
    link: "/osmosis-api/intro",
  },
  {
    id: "pocketApi",
    type: "autogenerated",
    dirName: "pocket-api",
    label: "Pocket Network",
    link: "/pocket-api/intro",
  },
  {
    id: "polygonApi",
    type: "autogenerated",
    dirName: "polygon-api",
    label: "Polygon",
    link: "/polygon-api/intro",
  },
  {
    id: "radixApi",
    type: "autogenerated",
    dirName: "radix-api",
    label: "Radix",
    link: "/radix-api/intro",
  },
  {
    id: "scrollApi",
    type: "autogenerated",
    dirName: "scroll-api",
    label: "Scroll",
    link: "/scroll-api/intro",
  },
  {
    id: "seiApi",
    type: "autogenerated",
    dirName: "sei-api",
    label: "Sei",
    link: "/sei-api/intro",
  },
  {
    id: "solanaApi",
    type: "autogenerated",
    dirName: "solana-api",
    label: "Solana",
    link: "/solana-api/intro",
  },
  {
    id: "sonicApi",
    type: "autogenerated",
    dirName: "sonic-api",
    label: "Sonic",
    link: "/sonic-api/intro",
  },
  {
    id: "suiApi",
    type: "autogenerated",
    dirName: "sui-api",
    label: "Sui",
    link: "/sui-api/intro",
  },
  {
    id: "taikoApi",
    type: "autogenerated",
    dirName: "taiko-api",
    label: "Taiko",
    link: "/taiko-api/intro",
  },
  {
    id: "tronApi",
    type: "autogenerated",
    dirName: "tron-api",
    label: "TRON",
    link: "/tron-api/intro",
  },
  {
    id: "xrplAPI",
    type: "autogenerated",
    dirName: "xrpl-api",
    label: "XRP Ledger",
    link: "/xrpl-api/intro",
  },
  {
    id: "zklinkApi",
    type: "autogenerated",
    dirName: "zklink-nova-api",
    label: "zkLink Nova",
    link: "/zklink-nova-api/intro",
  },
  {
    id: "zksyncEraApi",
    type: "autogenerated",
    dirName: "zksync-era-api",
    label: "zkSync Era",
    link: "/zksync-era-api/intro",
  }
]

const chainsSupportedItems = chains.map((chain) => ({
  type: "link",
  label: chain.label,
  href: chain.link,
}))

const chainsSidebars = chains.reduce((prev, curr) => {
  return {
    ...prev,
    [curr.id]: [
      {
        type: curr.type,
        dirName: curr.dirName,
        customProps: {
          label: curr.label,
          link: curr.link,
        },
      },
    ],
  }
}, {})

/** @type {import('@docusaurus/plugin-content-docs').SidebarsConfig} */
let sidebars = {
  // By default, Docusaurus generates a sidebar from the docs folder structure
  // docsSidebar: [{type: 'autogenerated', dirName: '.'}],

  // But you can create a sidebar manually
  guides: [
    {
      type: "autogenerated",
      dirName: "guides",
      customProps: {
        label: "Guides",
        link: "/guides/getting-started/welcome-to-grove",
      },
    },
  ],
  groveApi: [
    {
      type: "autogenerated",
      dirName: "grove-api",
      customProps: {
        label: "Grove API",
        link: "/grove-api/getting-started/introduction",
      },
    },
    {
      type: "category",
      label: "Supported Chains",
      collapsible: false,
      items: chainsSupportedItems,
    },
  ],
  exploreGrove: [
    {
      type: "autogenerated",
      dirName: "explore-grove",
      customProps: {
        label: "Explore Grove",
        link: "/explore-grove/overview/introduction",
      },
    },
    {
      type: "category",
      label: "External Links",
      collapsible: false,
      items: [
        {
          type: "link",
          label: "Grove",
          href: "https://grove.city"
        },
        {
          type: "link",
          label: "PATH",
          href: "https://path.grove.city"
        },
        {
          type: "link",
          label: "Pocket Network",
          href: "https://docs.pokt.network"
        },
        {
          type: "link",
          label: "pocketd",
          href: "https://dev.poktroll.com"
        }
      ]
    }
  ],
  ...chainsSidebars,
}

module.exports = sidebars
